// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pizza renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pizza />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="card bg-inverse text-white text-center mb-3"
      >
        <PizzaSVG
          className="pizzaSVG"
          viewBox="0 0 58 58"
          xmlns="http://www.w3.org/2000/svg"
        />
        <div
          className="card-body"
        >
          <h5
            className="card-title"
            id="pizzaName"
          >
            Pizza size - 
            default pizza
          </h5>
          <p
            className="card-text"
            id="pizzaMaxToppings"
          >
            Max Toppings - 
            unlimited toppings!
          </p>
          <p
            className="card-text"
            id="pizzaBasePrice"
          >
            Base price - $
            0
          </p>
          <p
            className="card-text"
            id="pizzaTotalPrice"
          >
            Total price - $
            0
          </p>
          <Toppings
            pizzaName="default pizza"
            toppings={Array []}
          />
          <Button
            className="btn btn-warning text-gray-dark"
            handleClick={[Function]}
            label="add to cart"
          />
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <PizzaSVG
            className="pizzaSVG"
            viewBox="0 0 58 58"
            xmlns="http://www.w3.org/2000/svg"
          />,
          <div
            className="card-body"
          >
            <h5
              className="card-title"
              id="pizzaName"
            >
              Pizza size - 
              default pizza
            </h5>
            <p
              className="card-text"
              id="pizzaMaxToppings"
            >
              Max Toppings - 
              unlimited toppings!
            </p>
            <p
              className="card-text"
              id="pizzaBasePrice"
            >
              Base price - $
              0
            </p>
            <p
              className="card-text"
              id="pizzaTotalPrice"
            >
              Total price - $
              0
            </p>
            <Toppings
              pizzaName="default pizza"
              toppings={Array []}
            />
            <Button
              className="btn btn-warning text-gray-dark"
              handleClick={[Function]}
              label="add to cart"
            />
          </div>,
        ],
        "className": "card bg-inverse text-white text-center mb-3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "pizzaSVG",
            "viewBox": "0 0 58 58",
            "xmlns": "http://www.w3.org/2000/svg",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5
                className="card-title"
                id="pizzaName"
              >
                Pizza size - 
                default pizza
              </h5>,
              <p
                className="card-text"
                id="pizzaMaxToppings"
              >
                Max Toppings - 
                unlimited toppings!
              </p>,
              <p
                className="card-text"
                id="pizzaBasePrice"
              >
                Base price - $
                0
              </p>,
              <p
                className="card-text"
                id="pizzaTotalPrice"
              >
                Total price - $
                0
              </p>,
              <Toppings
                pizzaName="default pizza"
                toppings={Array []}
              />,
              <Button
                className="btn btn-warning text-gray-dark"
                handleClick={[Function]}
                label="add to cart"
              />,
            ],
            "className": "card-body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Pizza size - ",
                  "default pizza",
                ],
                "className": "card-title",
                "id": "pizzaName",
              },
              "ref": null,
              "rendered": Array [
                "Pizza size - ",
                "default pizza",
              ],
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Max Toppings - ",
                  "unlimited toppings!",
                ],
                "className": "card-text",
                "id": "pizzaMaxToppings",
              },
              "ref": null,
              "rendered": Array [
                "Max Toppings - ",
                "unlimited toppings!",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Base price - $",
                  0,
                ],
                "className": "card-text",
                "id": "pizzaBasePrice",
              },
              "ref": null,
              "rendered": Array [
                "Base price - $",
                0,
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Total price - $",
                  0,
                ],
                "className": "card-text",
                "id": "pizzaTotalPrice",
              },
              "ref": null,
              "rendered": Array [
                "Total price - $",
                0,
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "disabledToppings": undefined,
                "pizzaName": "default pizza",
                "toppings": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "btn btn-warning text-gray-dark",
                "handleClick": [Function],
                "label": "add to cart",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="card bg-inverse text-white text-center mb-3"
        >
          <PizzaSVG
            className="pizzaSVG"
            viewBox="0 0 58 58"
            xmlns="http://www.w3.org/2000/svg"
          />
          <div
            className="card-body"
          >
            <h5
              className="card-title"
              id="pizzaName"
            >
              Pizza size - 
              default pizza
            </h5>
            <p
              className="card-text"
              id="pizzaMaxToppings"
            >
              Max Toppings - 
              unlimited toppings!
            </p>
            <p
              className="card-text"
              id="pizzaBasePrice"
            >
              Base price - $
              0
            </p>
            <p
              className="card-text"
              id="pizzaTotalPrice"
            >
              Total price - $
              0
            </p>
            <Toppings
              pizzaName="default pizza"
              toppings={Array []}
            />
            <Button
              className="btn btn-warning text-gray-dark"
              handleClick={[Function]}
              label="add to cart"
            />
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <PizzaSVG
              className="pizzaSVG"
              viewBox="0 0 58 58"
              xmlns="http://www.w3.org/2000/svg"
            />,
            <div
              className="card-body"
            >
              <h5
                className="card-title"
                id="pizzaName"
              >
                Pizza size - 
                default pizza
              </h5>
              <p
                className="card-text"
                id="pizzaMaxToppings"
              >
                Max Toppings - 
                unlimited toppings!
              </p>
              <p
                className="card-text"
                id="pizzaBasePrice"
              >
                Base price - $
                0
              </p>
              <p
                className="card-text"
                id="pizzaTotalPrice"
              >
                Total price - $
                0
              </p>
              <Toppings
                pizzaName="default pizza"
                toppings={Array []}
              />
              <Button
                className="btn btn-warning text-gray-dark"
                handleClick={[Function]}
                label="add to cart"
              />
            </div>,
          ],
          "className": "card bg-inverse text-white text-center mb-3",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "pizzaSVG",
              "viewBox": "0 0 58 58",
              "xmlns": "http://www.w3.org/2000/svg",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h5
                  className="card-title"
                  id="pizzaName"
                >
                  Pizza size - 
                  default pizza
                </h5>,
                <p
                  className="card-text"
                  id="pizzaMaxToppings"
                >
                  Max Toppings - 
                  unlimited toppings!
                </p>,
                <p
                  className="card-text"
                  id="pizzaBasePrice"
                >
                  Base price - $
                  0
                </p>,
                <p
                  className="card-text"
                  id="pizzaTotalPrice"
                >
                  Total price - $
                  0
                </p>,
                <Toppings
                  pizzaName="default pizza"
                  toppings={Array []}
                />,
                <Button
                  className="btn btn-warning text-gray-dark"
                  handleClick={[Function]}
                  label="add to cart"
                />,
              ],
              "className": "card-body",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Pizza size - ",
                    "default pizza",
                  ],
                  "className": "card-title",
                  "id": "pizzaName",
                },
                "ref": null,
                "rendered": Array [
                  "Pizza size - ",
                  "default pizza",
                ],
                "type": "h5",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Max Toppings - ",
                    "unlimited toppings!",
                  ],
                  "className": "card-text",
                  "id": "pizzaMaxToppings",
                },
                "ref": null,
                "rendered": Array [
                  "Max Toppings - ",
                  "unlimited toppings!",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Base price - $",
                    0,
                  ],
                  "className": "card-text",
                  "id": "pizzaBasePrice",
                },
                "ref": null,
                "rendered": Array [
                  "Base price - $",
                  0,
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Total price - $",
                    0,
                  ],
                  "className": "card-text",
                  "id": "pizzaTotalPrice",
                },
                "ref": null,
                "rendered": Array [
                  "Total price - $",
                  0,
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "disabledToppings": undefined,
                  "pizzaName": "default pizza",
                  "toppings": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "btn btn-warning text-gray-dark",
                  "handleClick": [Function],
                  "label": "add to cart",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
